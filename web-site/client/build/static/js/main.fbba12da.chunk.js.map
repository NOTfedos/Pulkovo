{"version":3,"sources":["icons/Apple.png","icons/Icon.svg","components/Addictions/Addictions.module.css","components/Addictions/AddictionNav/AddictionNav.module.css","icons/Upload.svg","components/Layout/PageWrapper/PageWrapper.module.css","components/Layout/Header/Header.module.css","components/Addictions/AddictionNav/AddictionNavItem/AddictionNavItem.module.css","components/Layout/Header/Header.js","actions/addictionActions.js","components/Addictions/AddictionNav/AddictionNavItem/AddictionNavItem.js","components/Addictions/AddictionNav/ResultsNavItem/ResultNavItem.js","components/Addictions/AddictionNav/AddictionNav.js","components/Addictions/AddictionBlock/AddictionBlock.js","components/Addictions/Addictions.js","components/Layout/PageWrapper/PageWrapper.js","pages/MainPage.js","App.js","serviceWorker.js","reducers/addictionReducer.js","reducers/index.js","store/index.js","index.js","components/Addictions/AddictionNav/ResultsNavItem/ResultNavItem.module.css","components/Addictions/AddictionBlock/AddictionBlock.module.css"],"names":["module","exports","Header","className","styles","pulHeader","pulIcon","src","Icon","alt","pulText","Apple","appleIcon","setCurrentAddictionNumber","addiction","type","payload","addLoadedAddiction","AddictionNavItem","props","addictionState","useSelector","state","active","addictionNum","loaded","loadedAddictions","filter","num","dispatch","useDispatch","navItemActive","navItemInactive","navItemLoaded","navItem","onClick","navItemText","ResultNavItem","available","resultsAvailable","navItemUnavailable","AddictionNav","addictionNav","map","key","AddictionBlock","loading","resultsLoading","addictionBlock","Fragment","name","id","onChange","event","file","getState","formData","FormData","append","axios","post","then","res","data","add","fileUrl","setLoadedAddiction","length","get","saveFile","target","files","fileInput","htmlFor","inputLabel","Upload","height","width","scrolling","addIframe","Addictions","addictions","PageWrapper","children","pageWrapper","MainPage","App","Boolean","window","location","hostname","match","initialState","action","el","rootReducer","combineReducers","store","createStore","compose","applyMiddleware","thunk","__REDUX_DEVTOOLS_EXTENSION__","f","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.fbba12da.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Apple.4f91b446.png\";","module.exports = __webpack_public_path__ + \"static/media/Icon.7a0e9986.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addictions\":\"Addictions_addictions__84CUi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addictionNav\":\"AddictionNav_addictionNav__2k0x4\"};","module.exports = __webpack_public_path__ + \"static/media/Upload.67336228.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageWrapper\":\"PageWrapper_pageWrapper__3ABLp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pulHeader\":\"Header_pulHeader__3ZGjM\",\"pulIcon\":\"Header_pulIcon__6Iemz\",\"pulText\":\"Header_pulText__r_vaO\",\"appleIcon\":\"Header_appleIcon__1jVMM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navItem\":\"AddictionNavItem_navItem__OwGjN\",\"navItemActive\":\"AddictionNavItem_navItemActive__27h8a\",\"navItemInactive\":\"AddictionNavItem_navItemInactive__2zNnD\",\"navItemLoaded\":\"AddictionNavItem_navItemLoaded__21Y8B\",\"navItemText\":\"AddictionNavItem_navItemText__1DcxP\"};","import React from 'react';\r\n\r\nimport styles from \"./Header.module.css\";\r\nimport Icon from '../../../icons/Icon.svg';\r\nimport Apple from '../../../icons/Apple.png';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className={\"d-flex fixed-top align-items-center \" + styles.pulHeader}>\r\n            <div className={styles.pulIcon}>\r\n                <img src={Icon} alt=\"icon\"/>\r\n            </div>\r\n\r\n            <span className={styles.pulText}>Кальянная <img src={Apple} alt=\"apple\" className={styles.appleIcon}/><img src={Apple} alt=\"apple\" className={styles.appleIcon}/>(18+)</span>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import axios from 'axios';\r\n\r\nconst SET_CURRENT_ADDICTION_NUMBER = 'SET_CURRENT_ADDICTION_NUMBER';\r\nconst ADD_LOADED_ADDICTION = 'ADD_LOADED_ADDICTION';\r\nconst SET_LOADED_ADDICTION = 'SET_LOADED_ADDICTION';\r\nconst SET_RESULTS_AVAILABLE = 'SET_RESULTS_AVAILABLE';\r\nconst SET_RESULTS_LOADING = 'SET_RESULTS_LOADING';\r\n\r\nexport const setCurrentAddictionNumber = (addiction) => {\r\n    return {\r\n        type: SET_CURRENT_ADDICTION_NUMBER,\r\n        payload: addiction\r\n    }\r\n};\r\n\r\nexport const setResultsLoading = (loading) => {\r\n    return {\r\n        type: SET_RESULTS_LOADING,\r\n        payload: loading\r\n    }\r\n};\r\n\r\nexport const addLoadedAddiction = (addiction) => {\r\n    return {\r\n        type: ADD_LOADED_ADDICTION,\r\n        payload: addiction\r\n    }\r\n};\r\n\r\nexport const setLoadedAddiction = (addiction) => {\r\n    return {\r\n        type: SET_LOADED_ADDICTION,\r\n        payload: addiction\r\n    }\r\n};\r\n\r\nexport const setResultsAvailable = (available) => {\r\n    return {\r\n        type: SET_RESULTS_AVAILABLE,\r\n        payload: available\r\n    }\r\n};\r\n\r\nexport const saveFile = (addictionNum, file) => (dispatch, getState) => {\r\n    const state = getState().addiction;\r\n\r\n    const addiction = state.loadedAddictions.filter(addiction => addiction.num === addictionNum)[0];\r\n\r\n    const formData = new FormData();\r\n    formData.append(`application${addictionNum}`, file);\r\n    axios.post(\"http://localhost:3001/api/upload\", formData).then(\r\n        res => {\r\n            if (!res.data) return;\r\n            const add = {num: addictionNum, fileUrl: res.data.fileUrl};\r\n            if (addiction)\r\n                dispatch(setLoadedAddiction(add));\r\n            else\r\n                dispatch(addLoadedAddiction(add));\r\n\r\n            if (state.loadedAddictions.length === 4 || state.loadedAddictions.length === 6) {\r\n                dispatch(setResultsLoading(false));\r\n                axios.get(\"http://localhost:3001/api/download\").then(\r\n                    res =>\r\n                        dispatch(setResultsAvailable(true) &&\r\n                        dispatch(addLoadedAddiction({\r\n                            num: \"result\",\r\n                            fileUrl: res.data.fileUrl\r\n                        })))\r\n                )\r\n            }\r\n        }\r\n    )\r\n\r\n\r\n};\r\n\r\nexport { SET_CURRENT_ADDICTION_NUMBER, ADD_LOADED_ADDICTION, SET_LOADED_ADDICTION, SET_RESULTS_AVAILABLE, SET_RESULTS_LOADING };\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { setCurrentAddictionNumber } from \"../../../../actions/addictionActions\";\r\n\r\nimport styles from './AddictionNavItem.module.css';\r\n\r\nconst AddictionNavItem = (props) => {\r\n    const addictionState = useSelector(state => state.addiction);\r\n    const active = addictionState.addictionNum === props.addictionNum;\r\n    const loaded = addictionState.loadedAddictions.filter(addiction => addiction.num === props.addictionNum)[0];\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <div className={`${active ? styles.navItemActive: styles.navItemInactive} ${loaded ? styles.navItemLoaded: ''} ${styles.navItem}`} onClick={() => dispatch(setCurrentAddictionNumber(props.addictionNum))}>\r\n            <span className={styles.navItemText}>Приложение {props.addictionNum}</span>\r\n        </div>\r\n    );\r\n};\r\n\r\nAddictionNavItem.propTypes = {\r\n    addictionNum: PropTypes.number.isRequired\r\n};\r\n\r\nexport default AddictionNavItem;\r\n","import React from \"react\";\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\n\r\nimport styles from './ResultNavItem.module.css';\r\nimport {setCurrentAddictionNumber} from \"../../../../actions/addictionActions\";\r\n\r\nconst ResultNavItem = () => {\r\n    const addictionState = useSelector(state => state.addiction);\r\n    const active = addictionState.addictionNum === \"result\";\r\n    const available = addictionState.resultsAvailable;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <div className={`${active ? styles.navItemActive: styles.navItemInactive} ${!available ? styles.navItemUnavailable: ''} ${styles.navItem}`} onClick={available ? () => dispatch(setCurrentAddictionNumber(\"result\")) : null}>\r\n            <span className={styles.navItemText}>Результаты</span>\r\n        </div>\r\n    )\r\n\r\n};\r\n\r\nexport default ResultNavItem;\r\n","import React from 'react';\r\n\r\nimport styles from './AddictionNav.module.css';\r\n\r\nimport AddictionNavItem from \"./AddictionNavItem/AddictionNavItem\";\r\nimport ResultNavItem from \"./ResultsNavItem/ResultNavItem\";\r\n\r\nconst AddictionNav = () => {\r\n    return (\r\n        <div className={`d-flex ${styles.addictionNav} align-items-end`}>\r\n            {\r\n                [1, 2, 3, 4, 5].map(num =>\r\n                    <AddictionNavItem addictionNum={num} key={num}/>\r\n                )\r\n            }\r\n            <ResultNavItem/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default AddictionNav;\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { saveFile } from \"../../../actions/addictionActions\";\r\n\r\nimport styles from './AddictionBlock.module.css';\r\nimport Upload from '../../../icons/Upload.svg';\r\n\r\nconst AddictionBlock = () => {\r\n\r\n\r\n    const addictionState = useSelector(state => state.addiction);\r\n    const addictionNum = addictionState.addictionNum;\r\n    const loading = addictionState.resultsLoading;\r\n    const addiction = addictionState.loadedAddictions.filter(addiction => addiction.num === addictionNum)[0];\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <div className={styles.addictionBlock}>\r\n            {\r\n                addictionNum !== \"result\"\r\n                    ?\r\n                    <React.Fragment>\r\n                        <input type=\"file\" name={`application${addictionNum}`} id={addictionNum} onChange={(event) => dispatch(saveFile(addictionNum, event.target.files[0]))} className={styles.fileInput}/>\r\n                        <label htmlFor={addictionNum} className={`${styles.inputLabel}`}><img src={Upload} alt=\"upload\" height=\"20px\"/> Добавить файл</label>\r\n                    </React.Fragment>\r\n                    :\r\n                    <React.Fragment/>\r\n            }\r\n\r\n            {\r\n                addiction && !loading\r\n                    ?\r\n                    <iframe src={addiction.fileUrl} width=\"100%\" height=\"100%\" scrolling=\"auto\" className={styles.addIframe}/>\r\n                    :\r\n                    <React.Fragment/>\r\n            }\r\n\r\n            {\r\n                loading && addictionNum === 'result'\r\n                ?\r\n                    <img src=\"https://media.giphy.com/media/tLuotGlVFxYic/giphy.gif\" alt=\"spinning gorilla\"/>\r\n                :\r\n                    <React.Fragment/>\r\n            }\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default AddictionBlock;\r\n","import React from 'react';\r\n\r\nimport styles from './Addictions.module.css';\r\n\r\nimport AddictionNav from \"./AddictionNav/AddictionNav\";\r\nimport AddictionBlock from \"./AddictionBlock/AddictionBlock\";\r\n\r\nconst Addictions = () => {\r\n    return (\r\n        <div className={`d-flex flex-column flex-grow-1 ${styles.addictions}`}>\r\n            <AddictionNav/>\r\n            <AddictionBlock/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Addictions;\r\n","import React from 'react';\r\n\r\nimport styles from './PageWrapper.module.css';\r\n\r\nconst PageWrapper = ({children}) => {\r\n    return (\r\n        <div className={`${styles.pageWrapper} d-flex flex-column`}>\r\n            {children}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default PageWrapper;\r\n","import React from 'react';\r\n\r\nimport Header from \"../components/Layout/Header/Header\";\r\nimport Addictions from \"../components/Addictions/Addictions\";\r\nimport PageWrapper from \"../components/Layout/PageWrapper/PageWrapper\";\r\n\r\nconst MainPage = () => {\r\n    return (\r\n        <PageWrapper>\r\n            <Header/>\r\n            <Addictions/>\r\n        </PageWrapper>\r\n    )\r\n};\r\n\r\nexport default MainPage;","import React from 'react';\n\nimport MainPage from \"./pages/MainPage\";\n\nfunction App() {\n  return (\n      <MainPage/>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\r\n    SET_CURRENT_ADDICTION_NUMBER,\r\n    ADD_LOADED_ADDICTION,\r\n    SET_LOADED_ADDICTION,\r\n    SET_RESULTS_AVAILABLE,\r\n    SET_RESULTS_LOADING\r\n} from \"../actions/addictionActions\";\r\n\r\nconst initialState = {\r\n    addictionNum: 1,\r\n    loadedAddictions: [],\r\n    resultsAvailable: false,\r\n    resultsLoading: false\r\n};\r\n\r\nconst addiction = (state=initialState, action) => {\r\n    switch (action.type){\r\n        case SET_CURRENT_ADDICTION_NUMBER:\r\n            return {\r\n                ...state,\r\n                addictionNum: action.payload\r\n            };\r\n        case ADD_LOADED_ADDICTION:\r\n            return {\r\n                ...state,\r\n                loadedAddictions: [...state.loadedAddictions, action.payload]\r\n            };\r\n        case SET_LOADED_ADDICTION:\r\n            return {\r\n                ...state,\r\n                loadedAddictions: state.loadedAddictions.map(el => el.num === action.payload.num ? action.payload: el)\r\n            };\r\n        case SET_RESULTS_AVAILABLE:\r\n            return {\r\n                ...state,\r\n                resultsAvailable: action.payload\r\n            };\r\n        case SET_RESULTS_LOADING:\r\n            return {\r\n                ...state,\r\n                resultsLoading: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default addiction;\r\n","import {combineReducers} from \"redux\";\r\n\r\nimport addiction from './addictionReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    addiction\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport rootReducer from '../reducers'\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    compose(\r\n        applyMiddleware(thunk),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__(): f => f\r\n    )\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './normalize.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from \"react-redux\";\n\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navItem\":\"ResultNavItem_navItem__jwNj_\",\"navItemActive\":\"ResultNavItem_navItemActive__3xvu1\",\"navItemInactive\":\"ResultNavItem_navItemInactive__3j8eB\",\"navItemText\":\"ResultNavItem_navItemText__3HlfX\",\"navItemUnavailable\":\"ResultNavItem_navItemUnavailable__2tz_P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addictionBlock\":\"AddictionBlock_addictionBlock__onD2Q\",\"fileInput\":\"AddictionBlock_fileInput__192t_\",\"inputLabel\":\"AddictionBlock_inputLabel__33dtA\",\"addIframe\":\"AddictionBlock_addIframe__wTwJj\"};"],"sourceRoot":""}